[{"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js":"1","/Users/rayvelasquez/React/tradelink_maint_client/src/index.js":"2","/Users/rayvelasquez/React/tradelink_maint_client/src/App.js":"3","/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js":"4","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js":"5","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js":"6","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js":"7","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js":"8","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js":"9","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js":"10","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js":"11","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js":"12","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js":"13","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Requests.js":"14"},{"size":362,"mtime":1610999423431,"results":"15","hashOfConfig":"16"},{"size":540,"mtime":1611002811901,"results":"17","hashOfConfig":"16"},{"size":2446,"mtime":1611449853475,"results":"18","hashOfConfig":"16"},{"size":1820,"mtime":1611010362561,"results":"19","hashOfConfig":"16"},{"size":1809,"mtime":1611010344308,"results":"20","hashOfConfig":"16"},{"size":2709,"mtime":1611419669850,"results":"21","hashOfConfig":"16"},{"size":1767,"mtime":1611452473685,"results":"22","hashOfConfig":"16"},{"size":892,"mtime":1611422044898,"results":"23","hashOfConfig":"16"},{"size":2946,"mtime":1611501276624,"results":"24","hashOfConfig":"16"},{"size":321,"mtime":1611009436763,"results":"25","hashOfConfig":"16"},{"size":2178,"mtime":1611343859053,"results":"26","hashOfConfig":"16"},{"size":2184,"mtime":1611343852400,"results":"27","hashOfConfig":"16"},{"size":2217,"mtime":1611343827363,"results":"28","hashOfConfig":"16"},{"size":3569,"mtime":1611511829903,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1cn671m",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js",[],["68","69"],"/Users/rayvelasquez/React/tradelink_maint_client/src/index.js",[],["70","71"],"/Users/rayvelasquez/React/tradelink_maint_client/src/App.js",["72","73"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js",["74","75","76"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst AdminNotes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>Admin Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default AdminNotes",["77","78"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js",["79","80","81"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Notes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>User Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default Notes","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js",[],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js",["82"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js",["83","84","85"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js",[],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js",["86","87"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst NotAuthorized = () => {\n  \n    return (\n      <div className=\"notes\">\n        <h1>Not Authorized</h1>\n      <p>You do not have permission to view this page.</p>\n      </div>\n    );\n}\n\nexport default NotAuthorized","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js",["88","89","90"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport {Link} from \"react-router-dom\"\n\nconst Trucks = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [trucks, setTrucks]= React.useState([])\n\nconst getTrucks = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/trucks`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setTrucks(data)\n}\n\nReact.useEffect(() => {\n  getTrucks()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{trucks.map((truck, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{truck.truck_number}</th>\n            <td>{truck.year}</td>\n            <td>{truck.make}</td>\n            <td>{truck.model}</td>\n            <td>{truck.vin}</td>\n            <td>{truck.ownership}</td>\n            <td>{truck.status}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Trucks</h1>\n  {trucks.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Trucks",["91","92"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js",["93","94"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\n\nconst Trailers = ({history}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [trailers, setTrailers]= React.useState([])\n\nconst getTrailers = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/trailers`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setTrailers(data)\n}\n\nReact.useEffect(() => {\n  getTrailers()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{trailers.map((trailer, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{trailer.trailer_number}</th>\n            <td>{trailer.year}</td>\n            <td>{trailer.make}</td>\n            <td>{trailer.model}</td>\n            <td>{trailer.vin}</td>\n            <td>{trailer.ownership}</td>\n            <td>{trailer.status}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Trailers</h1>\n  {trailers.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Trailers","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js",["95","96"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\n\nconst Forklifts = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [forklifts, setForklifts]= React.useState([])\n\nconst getForklifts = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/forklifts`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setForklifts(data)\n}\n\nReact.useEffect(() => {\n  getForklifts()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{forklifts.map((forklift, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{forklift.forklift_number}</th>\n            <td>{forklift.year}</td>\n            <td>{forklift.make}</td>\n            <td>{forklift.model}</td>\n            <td>{forklift.fork_length}</td>\n            <td>{forklift.fork_type}</td>\n            <td>{forklift.weight_capacity}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Forklifts</h1>\n  {forklifts.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Forklifts","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Requests.js",["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":12},{"ruleId":"109","severity":1,"message":"110","line":40,"column":6,"nodeType":"111","endLine":40,"endColumn":8,"suggestions":"112"},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"114","line":9,"column":20,"nodeType":"107","messageId":"108","endLine":9,"endColumn":29},{"ruleId":"109","severity":1,"message":"115","line":28,"column":8,"nodeType":"111","endLine":28,"endColumn":10,"suggestions":"116"},{"ruleId":"99","replacedBy":"117"},{"ruleId":"101","replacedBy":"118"},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"114","line":9,"column":20,"nodeType":"107","messageId":"108","endLine":9,"endColumn":29},{"ruleId":"109","severity":1,"message":"115","line":28,"column":8,"nodeType":"111","endLine":28,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":22,"column":7,"nodeType":"122","endLine":22,"endColumn":78},{"ruleId":"105","severity":1,"message":"123","line":9,"column":10,"nodeType":"107","messageId":"108","endLine":9,"endColumn":16},{"ruleId":"105","severity":1,"message":"114","line":9,"column":18,"nodeType":"107","messageId":"108","endLine":9,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":14,"column":7,"nodeType":"122","endLine":14,"endColumn":78},{"ruleId":"105","severity":1,"message":"124","line":2,"column":9,"nodeType":"107","messageId":"108","endLine":2,"endColumn":18},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"113","line":3,"column":9,"nodeType":"107","messageId":"108","endLine":3,"endColumn":13},{"ruleId":"105","severity":1,"message":"114","line":6,"column":16,"nodeType":"107","messageId":"108","endLine":6,"endColumn":25},{"ruleId":"109","severity":1,"message":"125","line":25,"column":4,"nodeType":"111","endLine":25,"endColumn":6,"suggestions":"126"},{"ruleId":"99","replacedBy":"127"},{"ruleId":"101","replacedBy":"128"},{"ruleId":"105","severity":1,"message":"114","line":5,"column":20,"nodeType":"107","messageId":"108","endLine":5,"endColumn":29},{"ruleId":"109","severity":1,"message":"129","line":24,"column":4,"nodeType":"111","endLine":24,"endColumn":6,"suggestions":"130"},{"ruleId":"105","severity":1,"message":"114","line":5,"column":16,"nodeType":"107","messageId":"108","endLine":5,"endColumn":25},{"ruleId":"109","severity":1,"message":"131","line":24,"column":4,"nodeType":"111","endLine":24,"endColumn":6,"suggestions":"132"},{"ruleId":"105","severity":1,"message":"114","line":5,"column":20,"nodeType":"107","messageId":"108","endLine":5,"endColumn":29},{"ruleId":"109","severity":1,"message":"133","line":27,"column":4,"nodeType":"111","endLine":27,"endColumn":6,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setgState(g => ...)' if you only need 'gState' in the 'setgState' call.","ArrayExpression",["137"],"'Link' is defined but never used.","'setgState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["138"],["135"],["136"],["139"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'gState' is assigned a value but never used.","'GlobalCtx' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getTrucks'. Either include it or remove the dependency array.",["140"],["135"],["136"],"React Hook React.useEffect has a missing dependency: 'getTrailers'. Either include it or remove the dependency array.",["141"],"React Hook React.useEffect has a missing dependency: 'getForklifts'. Either include it or remove the dependency array.",["142"],"React Hook React.useEffect has a missing dependency: 'getRequests'. Either include it or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [gState]",{"range":"157","text":"158"},"Update the dependencies array to be: [getNotes]",{"range":"159","text":"160"},{"range":"161","text":"160"},"Update the dependencies array to be: [getTrucks]",{"range":"162","text":"163"},"Update the dependencies array to be: [getTrailers]",{"range":"164","text":"165"},"Update the dependencies array to be: [getForklifts]",{"range":"166","text":"167"},"Update the dependencies array to be: [getRequests]",{"range":"168","text":"169"},[1315,1317],"[gState]",[691,693],"[getNotes]",[686,688],[621,623],"[getTrucks]",[601,603],"[getTrailers]",[604,606],"[getForklifts]",[711,713],"[getRequests]"]