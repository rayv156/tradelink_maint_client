[{"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js":"1","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js":"2","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js":"3","/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js":"4","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js":"5","/Users/rayvelasquez/React/tradelink_maint_client/src/components/RequestCreate.js":"6","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Requests.js":"7","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js":"8","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js":"9","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js":"10","/Users/rayvelasquez/React/tradelink_maint_client/src/App.js":"11","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js":"12","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js":"13","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js":"14","/Users/rayvelasquez/React/tradelink_maint_client/src/components/TrailersCreate.js":"15","/Users/rayvelasquez/React/tradelink_maint_client/src/components/TrucksCreate.js":"16","/Users/rayvelasquez/React/tradelink_maint_client/src/components/ForkliftsCreate.js":"17","/Users/rayvelasquez/React/tradelink_maint_client/src/index.js":"18","/Users/rayvelasquez/React/tradelink_maint_client/src/components/RequestShow.js":"19"},{"size":362,"mtime":1610999423431,"results":"20","hashOfConfig":"21"},{"size":321,"mtime":1611009436763,"results":"22","hashOfConfig":"21"},{"size":1809,"mtime":1611010344308,"results":"23","hashOfConfig":"21"},{"size":1820,"mtime":1611010362561,"results":"24","hashOfConfig":"21"},{"size":3274,"mtime":1625452140492,"results":"25","hashOfConfig":"21"},{"size":6034,"mtime":1612648274602,"results":"26","hashOfConfig":"21"},{"size":4807,"mtime":1626662157819,"results":"27","hashOfConfig":"21"},{"size":3034,"mtime":1626664290382,"results":"28","hashOfConfig":"21"},{"size":1767,"mtime":1611452473685,"results":"29","hashOfConfig":"21"},{"size":2311,"mtime":1615238964428,"results":"30","hashOfConfig":"21"},{"size":3284,"mtime":1626660836371,"results":"31","hashOfConfig":"21"},{"size":3271,"mtime":1626664256192,"results":"32","hashOfConfig":"21"},{"size":2276,"mtime":1614908854468,"results":"33","hashOfConfig":"21"},{"size":892,"mtime":1611422044898,"results":"34","hashOfConfig":"21"},{"size":6781,"mtime":1615238271502,"results":"35","hashOfConfig":"21"},{"size":6101,"mtime":1615243131678,"results":"36","hashOfConfig":"21"},{"size":4206,"mtime":1615238787174,"results":"37","hashOfConfig":"21"},{"size":540,"mtime":1611002811901,"results":"38","hashOfConfig":"21"},{"size":309,"mtime":1626661858391,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1cn671m",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js",[],["97","98"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js",["99","100"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst NotAuthorized = () => {\n  \n    return (\n      <div className=\"notes\">\n        <h1>Not Authorized</h1>\n      <p>You do not have permission to view this page.</p>\n      </div>\n    );\n}\n\nexport default NotAuthorized",["101","102"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js",["103","104","105"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Notes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>User Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default Notes",["106","107"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js",["108","109","110"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst AdminNotes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>Admin Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default AdminNotes",["111","112"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js",["113","114"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport {Link} from \"react-router-dom\"\n\nconst Trucks = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [trucks, setTrucks]= React.useState([])\nconst blank = {\n  truck_number: 0,\n  year: 2020,\n  make: \"\",\n  model: \"\",\n  vin: \"\",\n  plates: \"\",\n  inspection: \"\",\n  insurance_exp: \"\",\n  axles: 0,\n  tires: \"\",\n  ownership: \"\",\n  status: \"\"\n\n}\nconst getTrucks = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/trucks`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setTrucks(data)\n}\n\nReact.useEffect(() => {\n  getTrucks()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div id=\"row-container\">\n        {/* <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody> */}\n        <ul className=\"list-group\">\n        <li className=\"list-group-item\" >\n              <div className=\"row\">\n              <div className=\"col\">#</div>\n            <div className=\"col\">Year</div>\n            <div className=\"col\">Make</div>\n            <div className=\"col\">Model</div>\n            <div className=\"col\">Vin</div>\n            <div className=\"col\">Ownership</div>\n            <div className=\"col\">Status</div>\n            </div>\n              </li>\n{trucks.map((truck, index)=> {\n    return (<>\n    <Link to={{pathname: \"/trucks/create\", selectedTruck: truck }} style={{textDecoration: 'none'}}>\n            <li className=\"list-group-item\" >\n              <div className=\"row\">\n              <div className=\"col\">{truck.truck_number}</div>\n            <div className=\"col\">{truck.year}</div>\n            <div className=\"col\">{truck.make}</div>\n            <div className=\"col\">{truck.model}</div>\n            <div className=\"col\">{truck.vin}</div>\n            <div className=\"col\">{truck.ownership}</div>\n            <div className=\"col\">{truck.status}</div>\n            </div>\n              </li>\n          \n        \n          </Link>\n          \n          </>\n)\n})}\n</ul>\n{/* </tbody> */}\n{/* </table> */}\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Trucks</h1>\n    <Link to={{pathname: \"/trucks/create\", selectedTruck: blank }}><button className=\"btn btn-primary\">New Truck</button></Link>\n  {trucks.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Trucks","/Users/rayvelasquez/React/tradelink_maint_client/src/components/RequestCreate.js",["115"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport \"./Create.css\";\nimport { Redirect } from 'react-router-dom'\n\nconst RequestCreate = ({history}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const {url} = gState\n    let requestID = null\n    const blank = {\n        date: Date(),\n        unit_number: 0,\n        equipment: \"\",\n        odometer: 0,\n        status: \"\"\n    }\n    const [formRequest, setFormRequest] = React.useState(blank)\n    const [inputList, setInputList] = React.useState([{ repair_type: \"\", description: \"\", status: \"\", request_id: null}]);\n\n    const handleChange = (event) => {\n        setFormRequest({...formRequest, [event.target.name]: event.target.value})\n    }\n\n    const handleInputChange = (e, index) => {\n        const { name, value } = e.target;\n        const list = [...inputList];\n        list[index][name] = value;\n        setInputList(list);\n      };\n\n      const handleRemoveClick = index => {\n        const list = [...inputList];\n        list.splice(index, 1);\n        setInputList(list);\n      };\n     \n      // handle click event of the Add button\n      const handleAddClick = () => {\n        setInputList([...inputList, { repair_type: \"\", description: \"\", status: \"\", request_id: null}]);\n      };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const token = await window.localStorage.getItem(\"token\")\n        await fetch(`${url}/requests`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": `bearer ${token}`\n            },\n            body: JSON.stringify(formRequest)\n        })\n        .then(response => response.json())\n        .then((data) => {\n            setgState({...gState, request_id: data.id})\n            requestID = data.id\n        })\n        inputList.map(async (item)=> {\n          \n        item.request_id = requestID\n        item.unit_number = Number(item.unit_number)\n        console.log(item)\n        await fetch(`${url}/repairs`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": `bearer ${token}`\n            },\n            body: JSON.stringify(item)\n        })\n    })\n        \n        history.push(\"/requests\")\n    }\n\n\nreturn (\n<div className=\"form-container\">\n    <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Create a Request</h1>\n        \n        <div className=\"form-group form-inline\">\n        <label>Date: </label>\n        <input\n                id=\"date\"\n                type=\"date\"\n                name='date'\n                className='form-control'\n                \n                value={formRequest.date}\n                onChange={handleChange} />\n            \n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Unit Number: </label>\n        <input\n                id=\"unit_number\"\n                type=\"number\"\n                name='unit_number'\n                className='form-control'\n                \n                value={formRequest.unit_number}\n                onChange={handleChange} />\n            \n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Equipment: </label>\n            <input id=\"equipment\"\n                type=\"text\"\n                name='equipment'\n                className='form-control'\n                placeholder=\"Equipment Type\"\n                value={formRequest.equipment}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Odometer:</label>\n            <input id=\"odometer\"\n                type=\"number\"\n                name='odometer'\n                className='form-control'\n                placeholder=\"Equipment Type\"\n                value={formRequest.odometer}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Status:</label>\n            <input id=\"status\"\n                type=\"text\"\n                name='status'\n                className='form-control'\n                placeholder=\"Status\"\n                value={formRequest.status}\n                onChange={handleChange} />\n        </div>\n\n        <div className=\"App\">\n      \n      {inputList.map((x, i) => {\n        return (<>\n          <div className=\"form-group form-inline\">\n              <label>Repair Type:</label>\n            <input\n              className=\"form-control\"\n              name=\"repair_type\"\n              placeholder=\"Repair Type\"\n              value={x.repair_type}\n              onChange={e => handleInputChange(e, i)}\n            />\n            </div>\n            <div className=\"form-group form-inline\">\n            <label>Description</label>\n            <input\n              className=\"form-control\"\n              name=\"description\"\n              placeholder=\"Description\"\n              value={x.description}\n              onChange={e => handleInputChange(e, i)}\n            />\n            </div>\n            <div className=\"form-group form-inline\">\n            <label>Status</label>\n            <input\n              className=\"form-control\"\n              name=\"status\"\n              placeholder=\"Status\"\n              value={x.status}\n              onChange={e => handleInputChange(e, i)}\n            />\n            </div>\n            <div className=\"btn-box\">\n              {inputList.length !== 1 && <button\n                className=\"btn btn-danger\"\n                onClick={() => handleRemoveClick(i)}>Remove</button>}\n              {inputList.length - 1 === i && <button className=\"btn btn-success\" onClick={handleAddClick}>Add</button>}\n            </div>\n          </>\n        );\n      })}\n    </div>\n        \n        <p style={{color: 'red'}}>{gState.error}</p>\n        <br>\n\n\n        </br>\n        <button\n            className=\"btn btn-primary btn-block\"\n            type=\"submit\">Submit Request</button>\n    </form>\n</div>\n    )\n}\n\nexport default RequestCreate","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Requests.js",["116","117"],"import React from 'react';\nimport { GlobalCtx } from \"../App\";\nimport { Link } from 'react-router-dom'\nimport \"./Requests.css\";\n\nconst Requests = ({ history }) => {\n  const { gState } = React.useContext(GlobalCtx)\n  const { url } = gState\n  const boolArray = []\n  const [requests, setRequests] = React.useState([])\n  const [isExpanded, setisExpanded] = React.useState([])\n  const getRequests = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n    const response = await fetch(`${url}/requests`, {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `bearer ${token}`\n      }\n    })\n    const data = await response.json()\n    setRequests(data)\n    setisExpanded(boolArray)\n\n\n  }\n\n\n  React.useEffect(() => {\n    getRequests()\n  }, [])\n\n  const spinner = () => {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    )\n  }\n\n  const showRepairs = (request) => {\n\n    return (<>\n      <div className=\"row\">\n        \n                \n                  {request.repairs.map((repair, index) => {\n                    boolArray.push(false)\n                    return (<>\n                 <div className=\"col-sm-3\">   \n         <div className=\"card text-black bg-secondary mb-3\" >\n           <img className=\"card-img-top\" src=\"https://dss.fosterwebmarketing.com/upload/dhclaw.com/39504259%20totaled%20car.jpg\" alt=\"Card image cap\" />\n           <div className=\"card-body\">\n                  <ul className=\"list-group-flush\" style={{padding: 0}}>\n                        <li className=\"list-group-item\">Repair #: {repair.id}</li>\n                        <li className=\"list-group-item\">Repair Type: {repair.repair_type}</li>\n                        <li className=\"list-group-item\">Description: {repair.description}</li>\n                        <li className=\"list-group-item\">Status: {repair.status}</li>\n                      \n                </ul>\n                </div>\n               \n          </div>\n          </div>  \n                    </>\n                    )\n                  })\n                }\n       \n      </div>\n    </>\n\n    )\n  }\n\n\n  const loaded = () => (\n   <div id=\"row-container\" >\n        \n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">\n              <div className=\"row\">\n            <div className=\"col\">#</div>\n            <div className=\"col\">Date</div>\n            <div className=\"col\">Equipment</div>\n            <div className=\"col\">Odometer</div>\n            <div className=\"col\">Repair Reqs</div>\n            <div className=\"col\">Status</div>\n            <div className=\"col\"></div>\n            <div className=\"col\"></div>\n            </div>\n            </li>\n\n\n    {requests.map((request, index) => {\n      \n      return (<>\n      <li className=\"list-group-item\">\n        <div className=\"row\">\n      <div className=\"col\">{request.id}</div>\n      <div className=\"col\">{request.date}</div>\n      <div className=\"col\">{request.equipment}</div>\n      <div className=\"col\">{request.odometer}</div>\n      <div className=\"col\">{`(${request.repairs.length}) `}\n              {request.repairs.map((repair, index) => {\n                if (index + 1 < request.repairs.length) {\n                  return `${repair.repair_type}, `\n                } else {\n                  return `${repair.repair_type}`\n                }\n              })}\n            </div>\n            <div className=\"col\">{request.status}</div>\n            <div className=\"col\"><Link to={{pathname: `/requests/${request.id}`, state: {request: request}}} request={request}>Edit\n            </Link></div>\n            <div className=\"col\"><button className=\"btn btn-secondary\" style={{width: '40px', margin: -20, marginLeft: -80}} onClick={() => {\n              const test = [...isExpanded]\n              test[index] = !test[index]\n              setisExpanded(test)\n              \n            }}>{isExpanded[index] ? \"-\" : \"+\"}</button></div>\n          \n          </div>\n          </li>\n          {isExpanded[index] ? showRepairs(request) : null}\n        </>\n      )\n    })}\n    </ul>\n  \n  </div>\n\n  )\n\n\n\n\n  return (\n    <div className=\"notes\">\n      <h1>Requests</h1>\n      <a href=\"/requests/create\"><button className=\"btn btn-primary\">New Request</button></a>\n      {requests.length > 0 ? loaded() : spinner()}\n    </div>\n  );\n}\n\nexport default Requests","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js",[],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js",["118"],"import React from 'react'\nimport { Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport {GlobalCtx} from \"../App\"\nimport \"./Navigation.css\"\nimport transportbrand from '../Transportationlogo.png'\n\nconst NavSignedIn = ({history}) => {\n  const {gState, setgState} = React.useContext(GlobalCtx)\n  const dropDown = () => {\n    return (\n    <NavDropdown title=\"Vehicles\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"/trucks\">Trucks</NavDropdown.Item>\n        <NavDropdown.Item href=\"/trailers\">Trailers</NavDropdown.Item>\n        <NavDropdown.Item href=\"/forklifts\">Forklifts</NavDropdown.Item>\n      </NavDropdown>\n    )\n  }\n    return (\n<>\n<Navbar collapseOnSelect expand=\"lg\" variant=\"light\" bg=\"light\">\n  <Navbar.Brand href=\"/\">\n      <img style={{width: \"200px\", paddingRight: 20}} src={transportbrand} /></Navbar.Brand>\n      \n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      \n    </Nav>\n    <Nav>\n    <Navbar.Brand>Maintenance Log</Navbar.Brand>\n    </Nav>\n    {/* <Nav>\n      <Navbar.Text>Signed in as: {gState.user} </Navbar.Text>\n\n    </Nav> */}\n    <Nav>\n      {gState.admin ? <Nav.Link href=\"/adminnotes\">Notes</Nav.Link> : <Nav.Link href=\"/notes\">Notes</Nav.Link>}\n      {gState.admin ? <Nav.Link href=\"/requests\">Requests</Nav.Link> : null}\n      {gState.admin ? dropDown() : null}\n\n      <Nav.Link href=\"/\" onClick={() => {\n          window.localStorage.removeItem(\"token\")\n          window.localStorage.removeItem(\"user\")\n          setgState({...gState, token: false, user: null})\n          alert(\"You have successfully logged out\")\n        }}>Logout</Nav.Link>\n\n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n  \n</>\n\n)\n\n}\n\nexport default NavSignedIn","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js",["119","120"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\n\nconst Forklifts = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [forklifts, setForklifts]= React.useState([])\n\nconst getForklifts = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/forklifts`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setForklifts(data)\n}\n\nReact.useEffect(() => {\n  getForklifts()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{forklifts.map((forklift, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{forklift.forklift_number}</th>\n            <td>{forklift.year}</td>\n            <td>{forklift.make}</td>\n            <td>{forklift.model}</td>\n            <td>{forklift.fork_length}</td>\n            <td>{forklift.fork_type}</td>\n            <td>{forklift.weight_capacity}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Forklifts</h1>\n    <a href=\"/forklifts/create\"><button className=\"btn btn-primary\">New Forklift</button></a>\n  {forklifts.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Forklifts",["121","122"],"/Users/rayvelasquez/React/tradelink_maint_client/src/App.js",["123","124"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js",[],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js",["125","126"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\n\nconst Trailers = ({history}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [trailers, setTrailers]= React.useState([])\n\nconst getTrailers = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/trailers`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setTrailers(data)\n}\n\nReact.useEffect(() => {\n  getTrailers()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{trailers.map((trailer, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{trailer.trailer_number}</th>\n            <td>{trailer.year}</td>\n            <td>{trailer.make}</td>\n            <td>{trailer.model}</td>\n            <td>{trailer.vin}</td>\n            <td>{trailer.ownership}</td>\n            <td>{trailer.status}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Trailers</h1>\n    <a href=\"/trailers/create\"><button className=\"btn btn-primary\">New Trailer</button></a>\n  {trailers.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Trailers","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js",["127","128","129"],"import React from 'react'\nimport { Navbar, Nav} from 'react-bootstrap'\nimport {GlobalCtx} from \"../App\"\nimport \"./Navigation.css\"\nimport transportbrand from '../Transportationlogo.png'\n\n\nconst Navigation = ({history}) => {\n  const {gState, setgState} = React.useContext(GlobalCtx)\n    return (\n<>\n<Navbar collapseOnSelect expand=\"lg\" variant=\"light\" bg=\"light\">\n<Navbar.Brand href=\"/\">\n      <img style={{width: \"200px\", paddingRight: 20}} src={transportbrand} /></Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      \n    </Nav>\n    <Nav>\n  <Navbar.Brand href=\"/\">Maintenance Log</Navbar.Brand>\n      <Nav.Link href=\"/\">Login</Nav.Link>\n      <Nav.Link href=\"/signup\">\n        Signup\n      </Nav.Link>\n     \n    </Nav>\n  </Navbar.Collapse>\n</Navbar>\n  \n</>\n\n)\n\n}\n\nexport default Navigation","/Users/rayvelasquez/React/tradelink_maint_client/src/components/TrailersCreate.js",["130","131","132","133"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport \"./Create.css\";\nimport { Redirect } from 'react-router-dom'\n\nconst TrailersCreate = ({history}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const {url} = gState\n    const blank = {\n        trailer_number: 0,\n        year: 2020,\n        make: \"\",\n        model: \"\",\n        vin: \"\",\n        trailer_type: \"\",\n        suspension: \"\",\n        plates: \"\",\n        inspection: \"\",\n        insurance_exp: \"\",\n        axles: 0,\n        tires: \"\",\n        ownership: \"\",\n        status: \"\"\n\n    }\n    const [formRequest, setFormRequest] = React.useState(blank)\n    const [inputList, setInputList] = React.useState([{ repair_type: \"\", description: \"\", status: \"\", request_id: null}]);\n\n    const handleChange = (event) => {\n        setFormRequest({...formRequest, [event.target.name]: event.target.value})\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const token = await window.localStorage.getItem(\"token\")\n        await fetch(`${url}/trailers`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": `bearer ${token}`\n            },\n            body: JSON.stringify(formRequest)\n        })\n        .then(response => response.json())\n        history.push(\"/trailers\")\n        \n    }\n\n\nreturn (\n<div className=\"form-container\">\n    <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Create a Trailer</h1>\n\n        <div className=\"form-group form-inline\">\n        <label>Trailer #: </label>\n        <input\n                id=\"trailer_number\"\n                type=\"number\"\n                name='trailer_number'\n                className='form-control'\n                \n                value={formRequest.trailer_number}\n                onChange={handleChange} />\n            \n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Year:</label>\n            <input id=\"year\"\n                type=\"number\"\n                name='year'\n                className='form-control'\n                placeholder=\"Year\"\n                value={formRequest.year}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Make: </label>\n            <input id=\"make\"\n                type=\"text\"\n                name='make'\n                className='form-control'\n                placeholder=\"Make\"\n                value={formRequest.make}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Model: </label>\n            <input id=\"model\"\n                type=\"text\"\n                name='model'\n                className='form-control'\n                placeholder=\"Model\"\n                value={formRequest.model}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>VIN: </label>\n            <input id=\"vin\"\n                type=\"text\"\n                name='vin'\n                className='form-control'\n                placeholder=\"VIN\"\n                value={formRequest.vin}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Trailer Type: </label>\n            <input id=\"trailer_type\"\n                type=\"text\"\n                name='trailer_type'\n                className='form-control'\n                placeholder=\"Trailer Type\"\n                value={formRequest.trailer_type}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Suspension: </label>\n            <input id=\"suspension\"\n                type=\"text\"\n                name='suspension'\n                className='form-control'\n                placeholder=\"Suspension\"\n                value={formRequest.suspension}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Plates:</label>\n            <input id=\"plates\"\n                type=\"text\"\n                name='plates'\n                className='form-control'\n                placeholder=\"Plates\"\n                value={formRequest.plates}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Inspection:</label>\n            <input id=\"inspection\"\n                type=\"text\"\n                name='inspection'\n                className='form-control'\n                placeholder=\"Inspection\"\n                value={formRequest.inspection}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Insur Exp:</label>\n            <input id=\"insurance_exp\"\n                type=\"text\"\n                name='insurance_exp'\n                className='form-control'\n                placeholder=\"Insurance Exp\"\n                value={formRequest.insurance_exp}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Axles:</label>\n            <input id=\"axles\"\n                type=\"number\"\n                name='axles'\n                className='form-control'\n                placeholder=\"Axles\"\n                value={formRequest.axles}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Tires:</label>\n            <input id=\"tires\"\n                type=\"text\"\n                name='tires'\n                className='form-control'\n                placeholder=\"Tires\"\n                value={formRequest.tires}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Ownership:</label>\n            <input id=\"ownership\"\n                type=\"text\"\n                name='ownership'\n                className='form-control'\n                placeholder=\"Ownership\"\n                value={formRequest.ownership}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Status:</label>\n            <input id=\"status\"\n                type=\"text\"\n                name='status'\n                className='form-control'\n                placeholder=\"Status\"\n                value={formRequest.status}\n                onChange={handleChange} />\n        </div>\n\n       \n        \n        <p style={{color: 'red'}}>{gState.error}</p>\n        <br>\n\n\n        </br>\n        <button\n            className=\"btn btn-primary btn-block\"\n            type=\"submit\">Create Trailer</button>\n    </form>\n</div>\n    )\n}\n\nexport default TrailersCreate","/Users/rayvelasquez/React/tradelink_maint_client/src/components/TrucksCreate.js",["134","135","136","137"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport \"./Create.css\";\nimport { Redirect } from 'react-router-dom'\n\nconst TrucksCreate = ({history, location}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const selectedTruck = location.selectedTruck\n    console.log(selectedTruck)\n    const {url} = gState\n    // const blank = {\n    //     truck_number: 0,\n    //     year: 2020,\n    //     make: \"\",\n    //     model: \"\",\n    //     vin: \"\",\n    //     plates: \"\",\n    //     inspection: \"\",\n    //     insurance_exp: \"\",\n    //     axles: 0,\n    //     tires: \"\",\n    //     ownership: \"\",\n    //     status: \"\"\n\n    // }\n    const [formRequest, setFormRequest] = React.useState(selectedTruck)\n    const [inputList, setInputList] = React.useState([{ repair_type: \"\", description: \"\", status: \"\", request_id: null}]);\n\n    const handleChange = (event) => {\n        setFormRequest({...formRequest, [event.target.name]: event.target.value})\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const token = await window.localStorage.getItem(\"token\")\n        await fetch(`${url}/trucks`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": `bearer ${token}`\n            },\n            body: JSON.stringify(formRequest)\n        })\n        .then(response => response.json())\n        history.push(\"/trucks\")\n        \n    }\n\n\nreturn (\n<div className=\"form-container\">\n    <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Create a Truck</h1>\n\n        <div className=\"form-group form-inline\">\n        <label>Truck #: </label>\n        <input\n                id=\"truck_number\"\n                type=\"number\"\n                name='truck_number'\n                className='form-control'\n                \n                value={formRequest.truck_number}\n                onChange={handleChange} />\n            \n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Year:</label>\n            <input id=\"year\"\n                type=\"number\"\n                name='year'\n                className='form-control'\n                placeholder=\"Year\"\n                value={formRequest.year}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Make: </label>\n            <input id=\"make\"\n                type=\"text\"\n                name='make'\n                className='form-control'\n                placeholder=\"Make\"\n                value={formRequest.make}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Model: </label>\n            <input id=\"model\"\n                type=\"text\"\n                name='model'\n                className='form-control'\n                placeholder=\"Model\"\n                value={formRequest.model}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>VIN: </label>\n            <input id=\"vin\"\n                type=\"text\"\n                name='vin'\n                className='form-control'\n                placeholder=\"VIN\"\n                value={formRequest.vin}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Plates:</label>\n            <input id=\"plates\"\n                type=\"text\"\n                name='plates'\n                className='form-control'\n                placeholder=\"Plates\"\n                value={formRequest.plates}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Inspection:</label>\n            <input id=\"inspection\"\n                type=\"text\"\n                name='inspection'\n                className='form-control'\n                placeholder=\"Inspection\"\n                value={formRequest.inspection}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Insur Exp:</label>\n            <input id=\"insurance_exp\"\n                type=\"text\"\n                name='insurance_exp'\n                className='form-control'\n                placeholder=\"Insurance Exp\"\n                value={formRequest.insurance_exp}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Axles:</label>\n            <input id=\"axles\"\n                type=\"number\"\n                name='axles'\n                className='form-control'\n                placeholder=\"Axles\"\n                value={formRequest.axles}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Tires:</label>\n            <input id=\"tires\"\n                type=\"text\"\n                name='tires'\n                className='form-control'\n                placeholder=\"Tires\"\n                value={formRequest.tires}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Ownership:</label>\n            <input id=\"ownership\"\n                type=\"text\"\n                name='ownership'\n                className='form-control'\n                placeholder=\"Ownership\"\n                value={formRequest.ownership}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Status:</label>\n            <input id=\"status\"\n                type=\"text\"\n                name='status'\n                className='form-control'\n                placeholder=\"Status\"\n                value={formRequest.status}\n                onChange={handleChange} />\n        </div>\n\n       \n        \n        <p style={{color: 'red'}}>{gState.error}</p>\n        <br>\n\n\n        </br>\n        <button\n            className=\"btn btn-primary btn-block\"\n            type=\"submit\">Create Truck</button>\n    </form>\n</div>\n    )\n}\n\nexport default TrucksCreate","/Users/rayvelasquez/React/tradelink_maint_client/src/components/ForkliftsCreate.js",["138","139","140","141"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport \"./Create.css\";\nimport { Redirect } from 'react-router-dom'\n\nconst ForkliftsCreate = ({history}) => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const {url} = gState\n    const blank = {\n        forklift_number: 0,\n        year: 2020,\n        make: \"\",\n        model: \"\",\n        fork_length: \"\",\n        fork_type: \"\",\n        weight_capacity: \"\"\n\n    }\n    const [formRequest, setFormRequest] = React.useState(blank)\n    const [inputList, setInputList] = React.useState([{ repair_type: \"\", description: \"\", status: \"\", request_id: null}]);\n\n    const handleChange = (event) => {\n        setFormRequest({...formRequest, [event.target.name]: event.target.value})\n    }\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        const token = await window.localStorage.getItem(\"token\")\n        await fetch(`${url}/forklifts`, {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"authorization\": `bearer ${token}`\n            },\n            body: JSON.stringify(formRequest)\n        })\n        .then(response => response.json())\n        history.push(\"/forklifts\")\n        \n    }\n\n\nreturn (\n<div className=\"form-container\">\n    <form className=\"form\" onSubmit={handleSubmit}>\n        <h1>Create a Forklift</h1>\n\n        <div className=\"form-group form-inline\">\n        <label>Forklift #: </label>\n        <input\n                id=\"forklift_number\"\n                type=\"number\"\n                name='forklift_number'\n                className='form-control'\n                \n                value={formRequest.forklift_number}\n                onChange={handleChange} />\n            \n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Year:</label>\n            <input id=\"year\"\n                type=\"number\"\n                name='year'\n                className='form-control'\n                placeholder=\"Year\"\n                value={formRequest.year}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Make: </label>\n            <input id=\"make\"\n                type=\"text\"\n                name='make'\n                className='form-control'\n                placeholder=\"Make\"\n                value={formRequest.make}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Model: </label>\n            <input id=\"model\"\n                type=\"text\"\n                name='model'\n                className='form-control'\n                placeholder=\"Model\"\n                value={formRequest.model}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Fork Length: </label>\n            <input id=\"fork_length\"\n                type=\"text\"\n                name='fork_length'\n                className='form-control'\n                placeholder=\"Fork Length\"\n                value={formRequest.fork_length}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Fork Type:</label>\n            <input id=\"fork_type\"\n                type=\"text\"\n                name='fork_type'\n                className='form-control'\n                placeholder=\"Fork Type\"\n                value={formRequest.fork_type}\n                onChange={handleChange} />\n        </div>\n        <div className=\"form-group form-inline\">\n        <label>Weight Capacty:</label>\n            <input id=\"weight_capacity\"\n                type=\"text\"\n                name='weight_capacity'\n                className='form-control'\n                placeholder=\"Weight Cpcty\"\n                value={formRequest.weight_capacity}\n                onChange={handleChange} />\n        </div>\n        \n       \n        \n        <p style={{color: 'red'}}>{gState.error}</p>\n        <br>\n\n\n        </br>\n        <button\n            className=\"btn btn-primary btn-block\"\n            type=\"submit\">Create Truck</button>\n    </form>\n</div>\n    )\n}\n\nexport default ForkliftsCreate","/Users/rayvelasquez/React/tradelink_maint_client/src/index.js",[],["142","143"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/RequestShow.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":9,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"152","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"144","replacedBy":"153"},{"ruleId":"146","replacedBy":"154"},{"ruleId":"148","severity":1,"message":"152","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":9,"column":20,"nodeType":"150","messageId":"151","endLine":9,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":28,"column":8,"nodeType":"158","endLine":28,"endColumn":10,"suggestions":"159"},{"ruleId":"144","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},{"ruleId":"148","severity":1,"message":"152","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"155","line":9,"column":20,"nodeType":"150","messageId":"151","endLine":9,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":28,"column":8,"nodeType":"158","endLine":28,"endColumn":10,"suggestions":"162"},{"ruleId":"144","replacedBy":"163"},{"ruleId":"146","replacedBy":"164"},{"ruleId":"148","severity":1,"message":"155","line":6,"column":16,"nodeType":"150","messageId":"151","endLine":6,"endColumn":25},{"ruleId":"156","severity":1,"message":"165","line":39,"column":4,"nodeType":"158","endLine":39,"endColumn":6,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"167","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"168","line":31,"column":6,"nodeType":"158","endLine":31,"endColumn":8,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":60,"column":12,"nodeType":"172","endLine":60,"endColumn":153},{"ruleId":"173","severity":1,"message":"174","line":22,"column":7,"nodeType":"172","endLine":22,"endColumn":78},{"ruleId":"148","severity":1,"message":"155","line":5,"column":16,"nodeType":"150","messageId":"151","endLine":5,"endColumn":25},{"ruleId":"156","severity":1,"message":"175","line":24,"column":4,"nodeType":"158","endLine":24,"endColumn":6,"suggestions":"176"},{"ruleId":"144","replacedBy":"177"},{"ruleId":"146","replacedBy":"178"},{"ruleId":"148","severity":1,"message":"179","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":12},{"ruleId":"156","severity":1,"message":"180","line":46,"column":6,"nodeType":"158","endLine":46,"endColumn":8,"suggestions":"181"},{"ruleId":"148","severity":1,"message":"155","line":5,"column":20,"nodeType":"150","messageId":"151","endLine":5,"endColumn":29},{"ruleId":"156","severity":1,"message":"182","line":24,"column":4,"nodeType":"158","endLine":24,"endColumn":6,"suggestions":"183"},{"ruleId":"148","severity":1,"message":"184","line":9,"column":10,"nodeType":"150","messageId":"151","endLine":9,"endColumn":16},{"ruleId":"148","severity":1,"message":"155","line":9,"column":18,"nodeType":"150","messageId":"151","endLine":9,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":14,"column":7,"nodeType":"172","endLine":14,"endColumn":78},{"ruleId":"148","severity":1,"message":"167","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"155","line":7,"column":20,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"185","line":27,"column":12,"nodeType":"150","messageId":"151","endLine":27,"endColumn":21},{"ruleId":"148","severity":1,"message":"186","line":27,"column":23,"nodeType":"150","messageId":"151","endLine":27,"endColumn":35},{"ruleId":"148","severity":1,"message":"167","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"155","line":7,"column":20,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"185","line":27,"column":12,"nodeType":"150","messageId":"151","endLine":27,"endColumn":21},{"ruleId":"148","severity":1,"message":"186","line":27,"column":23,"nodeType":"150","messageId":"151","endLine":27,"endColumn":35},{"ruleId":"148","severity":1,"message":"167","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"155","line":7,"column":20,"nodeType":"150","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"185","line":20,"column":12,"nodeType":"150","messageId":"151","endLine":20,"endColumn":21},{"ruleId":"148","severity":1,"message":"186","line":20,"column":23,"nodeType":"150","messageId":"151","endLine":20,"endColumn":35},{"ruleId":"144","replacedBy":"187"},{"ruleId":"146","replacedBy":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'GlobalCtx' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.",["189"],["190"],"'setgState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.","ArrayExpression",["191"],["189"],["190"],["192"],["189"],["190"],"React Hook React.useEffect has a missing dependency: 'getTrucks'. Either include it or remove the dependency array.",["193"],"'Redirect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getRequests'. Either include it or remove the dependency array.",["194"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook React.useEffect has a missing dependency: 'getForklifts'. Either include it or remove the dependency array.",["195"],["189"],["190"],"'logo' is defined but never used.","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setgState(g => ...)' if you only need 'gState' in the 'setgState' call.",["196"],"React Hook React.useEffect has a missing dependency: 'getTrailers'. Either include it or remove the dependency array.",["197"],"'gState' is assigned a value but never used.","'inputList' is assigned a value but never used.","'setInputList' is assigned a value but never used.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"198","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [getNotes]",{"range":"211","text":"212"},{"range":"213","text":"212"},"Update the dependencies array to be: [getTrucks]",{"range":"214","text":"215"},"Update the dependencies array to be: [getRequests]",{"range":"216","text":"217"},"Update the dependencies array to be: [getForklifts]",{"range":"218","text":"219"},"Update the dependencies array to be: [gState]",{"range":"220","text":"221"},"Update the dependencies array to be: [getTrailers]",{"range":"222","text":"223"},[686,688],"[getNotes]",[691,693],[816,818],"[getTrucks]",[810,812],"[getRequests]",[604,606],"[getForklifts]",[1641,1643],"[gState]",[601,603],"[getTrailers]"]