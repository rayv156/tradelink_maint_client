[{"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js":"1","/Users/rayvelasquez/React/tradelink_maint_client/src/index.js":"2","/Users/rayvelasquez/React/tradelink_maint_client/src/App.js":"3","/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js":"4","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js":"5","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js":"6","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js":"7","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js":"8","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js":"9","/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js":"10","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js":"11","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js":"12","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js":"13"},{"size":362,"mtime":1610999423431,"results":"14","hashOfConfig":"15"},{"size":540,"mtime":1611002811901,"results":"16","hashOfConfig":"15"},{"size":2308,"mtime":1611420214609,"results":"17","hashOfConfig":"15"},{"size":1820,"mtime":1611010362561,"results":"18","hashOfConfig":"15"},{"size":1809,"mtime":1611010344308,"results":"19","hashOfConfig":"15"},{"size":2709,"mtime":1611419669850,"results":"20","hashOfConfig":"15"},{"size":1511,"mtime":1611417642110,"results":"21","hashOfConfig":"15"},{"size":892,"mtime":1611422044898,"results":"22","hashOfConfig":"15"},{"size":2907,"mtime":1611423068679,"results":"23","hashOfConfig":"15"},{"size":321,"mtime":1611009436763,"results":"24","hashOfConfig":"15"},{"size":2178,"mtime":1611343859053,"results":"25","hashOfConfig":"15"},{"size":2184,"mtime":1611343852400,"results":"26","hashOfConfig":"15"},{"size":2217,"mtime":1611343827363,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1cn671m",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/rayvelasquez/React/tradelink_maint_client/src/reportWebVitals.js",[],["63","64"],"/Users/rayvelasquez/React/tradelink_maint_client/src/index.js",[],["65","66"],"/Users/rayvelasquez/React/tradelink_maint_client/src/App.js",["67","68"],"import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Notes from './components/Notes'\nimport NotAuthorized from './components/NotAuthorized'\nimport AdminNotes from './components/AdminNotes'\nimport Navigation from './components/Navigation'\nimport NavSignedIn from './components/NavSignedIn'\nimport Trucks from './components/Trucks'\nimport Trailers from './components/Trailers'\nimport Forklifts from './components/Forklifts'\nimport jwt_decode from \"jwt-decode\"\n\nexport const GlobalCtx = React.createContext(null)\n\n\nfunction App({history}) {\n  const [gState, setgState] = React.useState({\n    url: \"http://localhost:3000\", \n    token: false, \n    user: null, \n    admin: null, \n    error: null\n  })\n  \n  React.useEffect(()=>{\n    const token = window.localStorage.getItem(\"token\")\n    const user = JSON.parse(window.localStorage.getItem(\"user\"))\n    //console.log(user)\n    if (token){\n     const decoded_admin = jwt_decode(token)\n     setgState({...gState, token: true, user: user, admin: decoded_admin.is_admin})\n   } else {\n     setgState({...gState, token: false, user: null, admin: null})\n   }\n  }, [])\n  \n  const checkLogin = () => {\n    if (gState.token){\n      return <NavSignedIn/>\n    } else {\n      return <Navigation/>\n    }\n  }\n  \n\n  return (\n    <GlobalCtx.Provider value={{ gState, setgState }}>\n    <div className=\"App\">\n      {checkLogin()}\n      <Switch>\n        <Route exact path=\"/\">\n          {gState.admin && gState.token ? <Redirect to=\"/adminnotes\"/> : gState.token && !gState.admin ? <Redirect to=\"/notes\"/> : <Login/>}\n          </Route>\n        <Route path=\"/notes\" exact component={Notes} />\n        <Route path=\"/signup\" exact component={Signup} />\n        <Route path=\"/adminnotes\" exact component={gState.admin ? AdminNotes : NotAuthorized} />\n        <Route path=\"/trucks\" exact component={gState.admin ? Trucks : NotAuthorized} />\n        <Route path=\"/trailers\" exact component={gState.admin ? Trailers : NotAuthorized} />\n        <Route path=\"/forklifts\" exact component={gState.admin ? Forklifts : NotAuthorized} />\n        \n      </Switch>\n    </div>\n    </GlobalCtx.Provider>\n  );\n}\n\nexport default App;\n",["69","70"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/AdminNotes.js",["71","72","73"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst AdminNotes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>Admin Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default AdminNotes",["74","75"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Notes.js",["76","77","78"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Notes = () => {\n    const {gState, setgState} = React.useContext(GlobalCtx)\n    const { url } = gState\n    const [notes, setNotes]= React.useState([])\n  \n    const getNotes = async () => {\n    const token = await window.localStorage.getItem(\"token\")\n      const response = await fetch(`${url}/notes`,  {\n        method: \"get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `bearer ${token}`\n        }\n    })\n      const data = await response.json()\n      setNotes(data)\n    }\n  \n    React.useEffect(() => {\n      getNotes()\n    }, [])\n\n    const spinner = () => {\n      return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        </div>\n      )\n    }\n  \n  const loaded = () => (\n    <div className=\"workout-container\" >\n    {notes.map((note, index)=> {\n        return (\n            <div className=\"card\" style={{width: 350, margin: 10, justifyContent: 'space-between', boxShadow: '5px 5px 20px gray'}}>\n            <h2 className=\"card-header\">Note #{index+1}</h2>\n            <p>{note.message}</p>\n      \n      </div>\n    )\n    })}\n    </div>\n    )\n  \n  \n    return (\n      <div className=\"notes\">\n        <h1>User Notes</h1>\n      {notes.length > 0 ? loaded() : spinner()}\n      </div>\n    );\n}\n\nexport default Notes","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Login.js",[],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NavSignedIn.js",["79"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Navigation.js",["80","81","82"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Signup.js",["83"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/NotAuthorized.js",["84","85"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trucks.js",["86","87","88"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\nimport {Link} from \"react-router-dom\"\n\nconst Trucks = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [trucks, setTrucks]= React.useState([])\n\nconst getTrucks = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/trucks`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setTrucks(data)\n}\n\nReact.useEffect(() => {\n  getTrucks()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{trucks.map((truck, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{truck.truck_number}</th>\n            <td>{truck.year}</td>\n            <td>{truck.make}</td>\n            <td>{truck.model}</td>\n            <td>{truck.vin}</td>\n            <td>{truck.ownership}</td>\n            <td>{truck.status}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Trucks</h1>\n  {trucks.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Trucks","/Users/rayvelasquez/React/tradelink_maint_client/src/components/Trailers.js",["89","90"],"/Users/rayvelasquez/React/tradelink_maint_client/src/components/Forklifts.js",["91","92"],"import React from 'react'\nimport {GlobalCtx} from \"../App\"\n\nconst Forklifts = ({history}) => {\nconst {gState, setgState} = React.useContext(GlobalCtx)\nconst { url } = gState\nconst [forklifts, setForklifts]= React.useState([])\n\nconst getForklifts = async () => {\nconst token = await window.localStorage.getItem(\"token\")\n  const response = await fetch(`${url}/forklifts`,  {\n    method: \"get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `bearer ${token}`\n    }\n})\n  const data = await response.json()\n  setForklifts(data)\n}\n\nReact.useEffect(() => {\n  getForklifts()\n}, [])\n\nconst spinner = () => {\n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-md\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    <div className=\"spinner-grow spinner-grow-lg\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>\n  )\n}\n\nconst loaded = () => (\n<div className=\"table-responsive\" >\n        <table class=\"table table-hover table-dark\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Year</th>\n            <th scope=\"col\">Make</th>\n            <th scope=\"col\">Model</th>\n            <th scope=\"col\">Vin</th>\n            <th scope=\"col\">Ownership</th>\n            <th scope=\"col\">Status</th>\n          </tr>\n        </thead>\n        <tbody>\n{forklifts.map((forklift, index)=> {\n    return (<>\n              <tr onClick={()=>{history.push('/adminnotes')}}>\n            <th scope=\"row\">{forklift.forklift_number}</th>\n            <td>{forklift.year}</td>\n            <td>{forklift.make}</td>\n            <td>{forklift.model}</td>\n            <td>{forklift.fork_length}</td>\n            <td>{forklift.fork_type}</td>\n            <td>{forklift.weight_capacity}</td>\n          \n          </tr>\n          \n          </>\n)\n})}\n</tbody>\n</table>\n</div>\n)\n\n\nreturn (\n  <div className=\"notes\">\n    <h1>Forklifts</h1>\n  {forklifts.length > 0 ? loaded() : spinner()}\n  </div>\n);\n}\n\nexport default Forklifts",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"97"},{"ruleId":"95","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":39,"column":6,"nodeType":"105","endLine":39,"endColumn":8,"suggestions":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"109","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":9,"column":20,"nodeType":"101","messageId":"102","endLine":9,"endColumn":29},{"ruleId":"103","severity":1,"message":"111","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"112"},{"ruleId":"93","replacedBy":"113"},{"ruleId":"95","replacedBy":"114"},{"ruleId":"99","severity":1,"message":"109","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"110","line":9,"column":20,"nodeType":"101","messageId":"102","endLine":9,"endColumn":29},{"ruleId":"103","severity":1,"message":"111","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":13,"column":7,"nodeType":"118","endLine":13,"endColumn":78},{"ruleId":"99","severity":1,"message":"119","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":16},{"ruleId":"99","severity":1,"message":"110","line":9,"column":18,"nodeType":"101","messageId":"102","endLine":9,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":14,"column":7,"nodeType":"118","endLine":14,"endColumn":78},{"ruleId":"99","severity":1,"message":"110","line":8,"column":20,"nodeType":"101","messageId":"102","endLine":8,"endColumn":29},{"ruleId":"99","severity":1,"message":"120","line":2,"column":9,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"109","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"109","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":13},{"ruleId":"99","severity":1,"message":"110","line":6,"column":16,"nodeType":"101","messageId":"102","endLine":6,"endColumn":25},{"ruleId":"103","severity":1,"message":"121","line":25,"column":4,"nodeType":"105","endLine":25,"endColumn":6,"suggestions":"122"},{"ruleId":"99","severity":1,"message":"110","line":5,"column":20,"nodeType":"101","messageId":"102","endLine":5,"endColumn":29},{"ruleId":"103","severity":1,"message":"123","line":24,"column":4,"nodeType":"105","endLine":24,"endColumn":6,"suggestions":"124"},{"ruleId":"99","severity":1,"message":"110","line":5,"column":16,"nodeType":"101","messageId":"102","endLine":5,"endColumn":25},{"ruleId":"103","severity":1,"message":"125","line":24,"column":4,"nodeType":"105","endLine":24,"endColumn":6,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'gState'. Either include it or remove the dependency array. You can also do a functional update 'setgState(g => ...)' if you only need 'gState' in the 'setgState' call.","ArrayExpression",["129"],["127"],["128"],"'Link' is defined but never used.","'setgState' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getNotes'. Either include it or remove the dependency array.",["130"],["127"],["128"],["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'gState' is assigned a value but never used.","'GlobalCtx' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getTrucks'. Either include it or remove the dependency array.",["132"],"React Hook React.useEffect has a missing dependency: 'getTrailers'. Either include it or remove the dependency array.",["133"],"React Hook React.useEffect has a missing dependency: 'getForklifts'. Either include it or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [gState]",{"range":"146","text":"147"},"Update the dependencies array to be: [getNotes]",{"range":"148","text":"149"},{"range":"150","text":"149"},"Update the dependencies array to be: [getTrucks]",{"range":"151","text":"152"},"Update the dependencies array to be: [getTrailers]",{"range":"153","text":"154"},"Update the dependencies array to be: [getForklifts]",{"range":"155","text":"156"},[1270,1272],"[gState]",[691,693],"[getNotes]",[686,688],[621,623],"[getTrucks]",[601,603],"[getTrailers]",[604,606],"[getForklifts]"]